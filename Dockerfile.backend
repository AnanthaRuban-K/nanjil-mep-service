# Stage 1: Base
FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat

# Stage 2: Dependencies
FROM base AS deps
WORKDIR /app
COPY package.json package-lock.json* ./
COPY apps/backend/package.json ./apps/backend/
RUN npm ci

# Stage 3: Build
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm install -g nx tsx
RUN nx build backend

# Stage 4: Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
RUN addgroup --system --gid 1001 backend
RUN adduser --system --uid 1001 backend

# Copy the built application - FIXED PATH
COPY --from=builder /app/dist/apps/backend ./
COPY --from=builder /app/node_modules ./node_modules

RUN chown -R backend:backend /app
USER backend

EXPOSE 3101
ENV PORT=3101

# Start the application - FIXED COMMAND
CMD ["node", "main.js"]